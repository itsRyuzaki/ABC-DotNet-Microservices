// <auto-generated />
using System;
using ABC.Accessories.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ABC.Accessories.Migrations.Computers
{
    [DbContext(typeof(ComputersDataContext))]
    partial class ComputersDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("abc-computers")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ABC.Accessories.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AbcPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("AccessoryBaseId")
                        .HasColumnType("integer");

                    b.Property<string>("AccessoryGuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SellerPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryBaseId");

                    b.HasIndex("AccessoryGuid")
                        .IsUnique();

                    b.ToTable("Accessories", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.AccessoryBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessoryBaseId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryBaseId")
                        .IsUnique();

                    b.ToTable("AccessoryBase", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OfficialSite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Brands", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessoryId")
                        .HasColumnType("integer");

                    b.Property<int>("AvailableCount")
                        .HasColumnType("integer");

                    b.Property<int>("TotalSold")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryId")
                        .IsUnique();

                    b.ToTable("Inventory", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.ItemImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessoryId")
                        .HasColumnType("integer");

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryId");

                    b.ToTable("ItemImages", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sellers", "abc-computers");
                });

            modelBuilder.Entity("AccessorySellerXREF", b =>
                {
                    b.Property<int>("AccessoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("SellersId")
                        .HasColumnType("integer");

                    b.HasKey("AccessoriesId", "SellersId");

                    b.HasIndex("SellersId");

                    b.ToTable("AccessorySellerXREF", "abc-computers");
                });

            modelBuilder.Entity("ABC.Accessories.Models.Accessory", b =>
                {
                    b.HasOne("ABC.Accessories.Models.AccessoryBase", "AccessoryBase")
                        .WithMany("Accessories")
                        .HasForeignKey("AccessoryBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessoryBase");
                });

            modelBuilder.Entity("ABC.Accessories.Models.Inventory", b =>
                {
                    b.HasOne("ABC.Accessories.Models.Accessory", "Accessory")
                        .WithOne("Inventory")
                        .HasForeignKey("ABC.Accessories.Models.Inventory", "AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessory");
                });

            modelBuilder.Entity("ABC.Accessories.Models.ItemImage", b =>
                {
                    b.HasOne("ABC.Accessories.Models.Accessory", "Accessory")
                        .WithMany("Images")
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessory");
                });

            modelBuilder.Entity("AccessorySellerXREF", b =>
                {
                    b.HasOne("ABC.Accessories.Models.Accessory", null)
                        .WithMany()
                        .HasForeignKey("AccessoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABC.Accessories.Models.Seller", null)
                        .WithMany()
                        .HasForeignKey("SellersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ABC.Accessories.Models.Accessory", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("ABC.Accessories.Models.AccessoryBase", b =>
                {
                    b.Navigation("Accessories");
                });
#pragma warning restore 612, 618
        }
    }
}
